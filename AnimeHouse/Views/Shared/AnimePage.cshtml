@using AnimeHouse.Data
@using AnimeHouse.ViewModels.AnimeModels;
@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore

@model AnimePageViewModel
@inject ApplicationContext db
<!doctype html>
<html>
	<head>
		<base href="/" />		
		<title>Home Page</title>
		<meta charset="utf-8" />
		<script src="~/js/jquery-3.6.1.js"></script>
		<script src="~/js/AnimePageScripts.js"></script>
		<link rel="stylesheet" href="/css/StyleSheet.css">
		<link rel="stylesheet" href="/css/VideoPlayerStyles.css" />
		<script src="~/js/video-script.js"></script>
	</head>
	@{
		User user =  db.Users.Include(u=> u.Animes).FirstOrDefault(u => u.UserName == User.Identity.Name);
	}
	<body>
		<header>
			<input  type="checkbox" id="burger"/>
			<label for="burger">&#8801</label>
			<nav>
				
				<ul class="nav_bar">
						<li class="nav-bar-element"><p>AnimeHouse</p></li>
						 <li class="nav-bar-element page-controllers"><a class="active" asp-action="Main" asp-controller="Home">Home</a></li>
							@if (User.IsInRole("admin") || @User.IsInRole("moderator"))
							{
								<li  class="nav-bar-element page-controllers"><a asp-action="UserList" asp-controller="Admin">User's List</a></li>
								<li   class="nav-bar-element page-controllers"><a asp-action="CreateTitle" asp-controller="Admin" >Create Title</a></li>
							}
							<li   class="nav-bar-element page-controllers"><a asp-action="GetListAnime" asp-controller="Anime">Anime</a></li>
							@if(User.Identity.IsAuthenticated) {
								<li  class="nav-bar-element page-controllers"><a asp-action="Services" asp-controller="Profile">@User.Identity.Name</a></li>
		
								<li  class="nav-bar-element page-controllers">
									<form method="post" asp-controller="Account" asp-action="Logout">
										<input type="submit" value="Выход" />
									</form>
								</li>
							}
							else {
								<li  class="nav-bar-element page-controllers"><a asp-controller="Account" asp-action="Login">Login</a></li>
								<li  class="nav-bar-element page-controllers"><a asp-controller="Account" asp-action="Registration">Registration</a></li>
							}
					 
				</ul>
			</nav>
		</header>
		<main>
			<div class="anime" >
				<div id="anime-poster">
					<img src="@(@Model.SearchedAnime.Path + @Model.SearchedAnime.ImgName)" />
					@if(User.Identity.IsAuthenticated)	{
						<form id="add-delete-favorite-form">
							<input name="userId" type="text" value="@user.Id" hidden>
							<input name="animeId" type="number" value="@Model.SearchedAnime.Id" hidden>

						</form>
							@if(user.Animes.FirstOrDefault(a => a.TitleName == @Model.SearchedAnime.TitleName) != null)
							{
								<button id="add-delete-favorite">Delete from favorite</button>

							}
							else
							{
								<button id="add-delete-favorite">Add to favorite</button>

							}



					}
				</div>
				<div id="anime-description">
					<h1>@Model.SearchedAnime.TitleName</h1>
					<p>@Model.SearchedAnime.Description</p>
				</div>

			</div>



		<div class="video-player-block">
			<div class="player">
				<video class="video" preload="auto" id="myvideo" src="~/animes/Gravity Falls/episods/space.mp4" height="300" width="400">
				</video>
				<div id="controlls">
					<div class="video-play"><button id="play-pause" style="color: orange"><img style="background-image: none;" id="play-pause-img" width="20px" height="20px" class="play-button" src="/img/play-button.png" alt="play"/></button><</div>
					<div class="video-progress">
						<!--<output for="fader" id="volume">0</output>-->
						<input type="range" id="fader" class="progress" min="0" max="10000" value="0" step="1"/>
					</div>
					<div class="video-time">
						<span id="currenttime">00:00</span> 
						<span id="duration">00:00</span>
					</div>
				</div>
			</div>
		</div>
			<script>
			</script>
	
		<div class="comments-block">
			<div>
				<h2>Comments</h2>
			</div>

			@if(!User.Identity.IsAuthenticated) {
			}
			else
			{

				<div  class="send-comment-block">
					<form id="send_comment_form">
						<input hidden id = "userName" name="userName" type="text" value="@user.UserName">
						<input hidden  id = "animeId" name="animeId" type="number" value="@Model.SearchedAnime.Id">
						<textarea id="text" name="text" cols="50" rows="5"></textarea>
						<button id="send_comment">Leave</button>
					</form>
				</div>
			}
		
			@if (User.IsInRole("admin") || @User.IsInRole("moderator")) {
				<div id="list_of_comments" class="comments-list">
				@foreach (var comment in db.Comments.Where(c => c.AnimeId == @Model.SearchedAnime.Id))
				{
					<div class="author-comment">
						<figure >
							<img src="~/img/DefaultUserImg.png">
						</figure>
						<form id="delete_comment_form">
							<input value="@comment.UserName" name="userName" id="userNameForm" hidden>
							<input value="@Model.SearchedAnime.Id" name="animeId" id="animeIdForm" hidden>
							<input value="@comment.Text" name="text" hidden>
							<input type="button" id="delete_user_comment" value="Удалить">
						</form>
						<h5>@comment.UserName</h5>
						<p>@comment.Text</p>
					</div><br/>
				}
				</div>

			}
			else {
				<div id="list_of_comments" class="comments-list">
				@foreach (var comment in db.Comments.Where(c => c.AnimeId == @Model.SearchedAnime.Id))
				{
					<div class="author-comment">
						<figure >
							<img src="~/img/DefaultUserImg.png">
						</figure>
						<h5>@comment.UserName</h5>
						<p>@comment.Text</p>
					</div><br/>
				}
				</div>
			}
		</div>
	</main>
	</body>
</html>


